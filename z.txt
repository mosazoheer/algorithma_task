: #include <iostream> #include <ctime> using namespace std; // Function to calculate factorial recursively unsigned long long factorialRecursive(int n) { if (n == 0 || n == 1) return 1; else return n * factorialRecursive(n - 1); } int main() { int n; cout << "Enter a number to calculate its factorial: "; cin >> n; clock_t start = clock(); // Start measuring time // Calculate factorial unsigned long long fact = factorialRecursive(n); clock_t end = clock(); // Stop measuring time double duration = (double)(end - start) / CLOCKS_PER_SEC; cout << "Factorial of " << n << " is: " << fact << endl; cout << "Time taken for execution: " << duration << " seconds" << endl; return 0; }

:    #include <iostream> #include <ctime> using namespace std; // Function to calculate factorial iteratively unsigned long long factorialIterative(int n) { unsigned long long result = 1; for (int i = 2; i <= n; ++i) { result *= i; } return result; } int main() { int n; cout << "Enter a number to calculate its factorial: "; cin >> n; clock_t start = clock(); // Start measuring time // Calculate factorial unsigned long long fact = factorialIterative(n); clock_t end = clock(); // Stop measuring time double duration = (double)(end - start) / CLOCKS_PER_SEC; cout << "Factorial of " << n << " is: " << fact << endl; cout << "Time taken for execution: " << duration << " seconds" << endl; return 0; }